package ru.kotikov.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Farmer service. Represents a row in the &quot;entity_Farmer&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link ru.kotikov.model.impl.FarmerModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ru.kotikov.model.impl.FarmerImpl}.
 * </p>
 *
 * @author Kirill_Kotikov
 * @see Farmer
 * @see ru.kotikov.model.impl.FarmerImpl
 * @see ru.kotikov.model.impl.FarmerModelImpl
 * @generated
 */
public interface FarmerModel extends BaseModel<Farmer> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a farmer model instance should use the {@link Farmer} interface instead.
     */

    /**
     * Returns the primary key of this farmer.
     *
     * @return the primary key of this farmer
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this farmer.
     *
     * @param primaryKey the primary key of this farmer
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the uuid of this farmer.
     *
     * @return the uuid of this farmer
     */
    @AutoEscape
    public String getUuid();

    /**
     * Sets the uuid of this farmer.
     *
     * @param uuid the uuid of this farmer
     */
    public void setUuid(String uuid);

    /**
     * Returns the farmer ID of this farmer.
     *
     * @return the farmer ID of this farmer
     */
    public long getFarmerId();

    /**
     * Sets the farmer ID of this farmer.
     *
     * @param farmerId the farmer ID of this farmer
     */
    public void setFarmerId(long farmerId);

    /**
     * Returns the farmer name of this farmer.
     *
     * @return the farmer name of this farmer
     */
    @AutoEscape
    public String getFarmerName();

    /**
     * Sets the farmer name of this farmer.
     *
     * @param farmerName the farmer name of this farmer
     */
    public void setFarmerName(String farmerName);

    /**
     * Returns the farmer legal form of this farmer.
     *
     * @return the farmer legal form of this farmer
     */
    @AutoEscape
    public String getFarmerLegalForm();

    /**
     * Sets the farmer legal form of this farmer.
     *
     * @param farmerLegalForm the farmer legal form of this farmer
     */
    public void setFarmerLegalForm(String farmerLegalForm);

    /**
     * Returns the farmer inn of this farmer.
     *
     * @return the farmer inn of this farmer
     */
    public long getFarmerInn();

    /**
     * Sets the farmer inn of this farmer.
     *
     * @param farmerInn the farmer inn of this farmer
     */
    public void setFarmerInn(long farmerInn);

    /**
     * Returns the farmer kpp of this farmer.
     *
     * @return the farmer kpp of this farmer
     */
    public long getFarmerKpp();

    /**
     * Sets the farmer kpp of this farmer.
     *
     * @param farmerKpp the farmer kpp of this farmer
     */
    public void setFarmerKpp(long farmerKpp);

    /**
     * Returns the farmer ogrn of this farmer.
     *
     * @return the farmer ogrn of this farmer
     */
    public long getFarmerOgrn();

    /**
     * Sets the farmer ogrn of this farmer.
     *
     * @param farmerOgrn the farmer ogrn of this farmer
     */
    public void setFarmerOgrn(long farmerOgrn);

    /**
     * Returns the farmer registration region ID of this farmer.
     *
     * @return the farmer registration region ID of this farmer
     */
    public Long getFarmerRegistrationRegionId();

    /**
     * Sets the farmer registration region ID of this farmer.
     *
     * @param farmerRegistrationRegionId the farmer registration region ID of this farmer
     */
    public void setFarmerRegistrationRegionId(Long farmerRegistrationRegionId);

    /**
     * Returns the farmer registration date of this farmer.
     *
     * @return the farmer registration date of this farmer
     */
    public Date getFarmerRegistrationDate();

    /**
     * Sets the farmer registration date of this farmer.
     *
     * @param farmerRegistrationDate the farmer registration date of this farmer
     */
    public void setFarmerRegistrationDate(Date farmerRegistrationDate);

    /**
     * Returns the farmer archive status of this farmer.
     *
     * @return the farmer archive status of this farmer
     */
    public boolean getFarmerArchiveStatus();

    /**
     * Returns <code>true</code> if this farmer is farmer archive status.
     *
     * @return <code>true</code> if this farmer is farmer archive status; <code>false</code> otherwise
     */
    public boolean isFarmerArchiveStatus();

    /**
     * Sets whether this farmer is farmer archive status.
     *
     * @param farmerArchiveStatus the farmer archive status of this farmer
     */
    public void setFarmerArchiveStatus(boolean farmerArchiveStatus);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(ru.kotikov.model.Farmer farmer);

    @Override
    public int hashCode();

    @Override
    public CacheModel<ru.kotikov.model.Farmer> toCacheModel();

    @Override
    public ru.kotikov.model.Farmer toEscapedModel();

    @Override
    public ru.kotikov.model.Farmer toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
