package ru.kotikov.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the Region service. Represents a row in the &quot;entity_Region&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link ru.kotikov.model.impl.RegionModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ru.kotikov.model.impl.RegionImpl}.
 * </p>
 *
 * @author Kirill_Kotikov
 * @see Region
 * @see ru.kotikov.model.impl.RegionImpl
 * @see ru.kotikov.model.impl.RegionModelImpl
 * @generated
 */
public interface RegionModel extends BaseModel<Region> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a region model instance should use the {@link Region} interface instead.
     */

    /**
     * Returns the primary key of this region.
     *
     * @return the primary key of this region
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this region.
     *
     * @param primaryKey the primary key of this region
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the uuid of this region.
     *
     * @return the uuid of this region
     */
    @AutoEscape
    public String getUuid();

    /**
     * Sets the uuid of this region.
     *
     * @param uuid the uuid of this region
     */
    public void setUuid(String uuid);

    /**
     * Returns the region ID of this region.
     *
     * @return the region ID of this region
     */
    public long getRegionId();

    /**
     * Sets the region ID of this region.
     *
     * @param regionId the region ID of this region
     */
    public void setRegionId(long regionId);

    /**
     * Returns the region name of this region.
     *
     * @return the region name of this region
     */
    @AutoEscape
    public String getRegionName();

    /**
     * Sets the region name of this region.
     *
     * @param regionName the region name of this region
     */
    public void setRegionName(String regionName);

    /**
     * Returns the region code of this region.
     *
     * @return the region code of this region
     */
    public long getRegionCode();

    /**
     * Sets the region code of this region.
     *
     * @param regionCode the region code of this region
     */
    public void setRegionCode(long regionCode);

    /**
     * Returns the region archive status of this region.
     *
     * @return the region archive status of this region
     */
    public boolean getRegionArchiveStatus();

    /**
     * Returns <code>true</code> if this region is region archive status.
     *
     * @return <code>true</code> if this region is region archive status; <code>false</code> otherwise
     */
    public boolean isRegionArchiveStatus();

    /**
     * Sets whether this region is region archive status.
     *
     * @param regionArchiveStatus the region archive status of this region
     */
    public void setRegionArchiveStatus(boolean regionArchiveStatus);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(ru.kotikov.model.Region region);

    @Override
    public int hashCode();

    @Override
    public CacheModel<ru.kotikov.model.Region> toCacheModel();

    @Override
    public ru.kotikov.model.Region toEscapedModel();

    @Override
    public ru.kotikov.model.Region toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
